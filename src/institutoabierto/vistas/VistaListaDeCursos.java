/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package institutoabierto.vistas;

import institutoAbiertoModelo.Conexion;
import institutoAbiertoModelo.Curso;
import institutoAbiertoModelo.CursoData;
import institutoAbiertoModelo.Matricula;
import institutoAbiertoModelo.MatriculaData;
import institutoAbiertoModelo.Persona;
import institutoAbiertoModelo.PersonaData;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Matias
 */
public class VistaListaDeCursos extends javax.swing.JInternalFrame {

    /**
     * Creates new form VistaListaDeCursos
     */
    private DefaultTableModel modelo;
    private  ArrayList<Curso> listaCursos;
    private ArrayList<Matricula> listaMatriculas;
    private CursoData cursoData;
    private MatriculaData matriculaData;
    private PersonaData personaData;
    private ArrayList<Persona> listaPersonas;
    private Conexion conexion;
    
    public VistaListaDeCursos() {
        try {
            initComponents();
            conexion = new Conexion("jdbc:mysql://localhost/InstitutoAbierto", "root", "");
            modelo=new DefaultTableModel();
            
            matriculaData = new MatriculaData(conexion);
            listaMatriculas =(ArrayList)matriculaData.obtenerMatriculas();
            
            cursoData = new CursoData(conexion);
            listaCursos =(ArrayList)cursoData.obtenerCursos();
            
            
            personaData=new PersonaData(conexion);
            listaPersonas=(ArrayList)personaData.obtenerPersonas();
            cargarPersonas();
            armaCabeceraTabla();
            cargarDatosNoMatriculados();
            cargarDatosMatriculados();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaListaDeCursos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbPersona = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tCursos = new javax.swing.JTable();
        rbMatriculados = new javax.swing.JRadioButton();
        rbNoMatriculados = new javax.swing.JRadioButton();
        jbSalir = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Cursos Disponibles");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Alumno:");

        cbPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPersonaActionPerformed(evt);
            }
        });

        tCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tCursos);

        rbMatriculados.setText("Matriculados");
        rbMatriculados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMatriculadosActionPerformed(evt);
            }
        });

        rbNoMatriculados.setText("No Matriculados");
        rbNoMatriculados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoMatriculadosActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbMatriculados)
                                .addGap(55, 55, 55)
                                .addComponent(rbNoMatriculados))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbSalir, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMatriculados)
                    .addComponent(rbNoMatriculados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbSalir)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbMatriculadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMatriculadosActionPerformed
        // TODO add your handling code here:
        rbNoMatriculados.setSelected(false);
        cargarDatosMatriculados();
    }//GEN-LAST:event_rbMatriculadosActionPerformed

    private void rbNoMatriculadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoMatriculadosActionPerformed
        // TODO add your handling code here:
        rbMatriculados.setSelected(false);
        cargarDatosNoMatriculados();
    }//GEN-LAST:event_rbNoMatriculadosActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void cbPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPersonaActionPerformed
        // TODO add your handling code here:
        borraFilasTabla();
    }//GEN-LAST:event_cbPersonaActionPerformed

public void cargarPersonas(){
    for(Persona item:listaPersonas){
            cbPersona.addItem(item);
    }
}
public void armaCabeceraTabla(){
  
           //Titulos de Columnas
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Nombre");
        columnas.add("Cupo");
        columnas.add("Costo");
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        tCursos.setModel(modelo);
  }

public void borraFilasTabla(){

   int a =modelo.getRowCount()-1;

for(int i=a;i>=0;i--){
   
modelo.removeRow(i );
}
}
public void cargarDatosNoMatriculados(){
    
      borraFilasTabla();
          //Llenar filas
        MatriculaData md =new MatriculaData(conexion);
        Persona seleccionado=(Persona)cbPersona.getSelectedItem();
        listaCursos = (ArrayList)md.obtenerCursosNOMatriculados(seleccionado.getId());
        for(Curso c:listaCursos){
        
            modelo.addRow(new Object[]{c.getId(),c.getNombre(),c.getCupo(),c.getCosto()});
                
        }   
    }
public void cargarDatosMatriculados(){
    
      borraFilasTabla();
          //Llenar filas
        MatriculaData md =new MatriculaData(conexion);
        Persona seleccionado=(Persona)cbPersona.getSelectedItem();
        listaCursos = (ArrayList)md.obtenerCursosMatriculados(seleccionado.getId());
        for(Curso c:listaCursos){
        
            modelo.addRow(new Object[]{c.getId(),c.getNombre(),c.getCupo(),c.getCosto()});
                
        }   
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Persona> cbPersona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbSalir;
    private javax.swing.JRadioButton rbMatriculados;
    private javax.swing.JRadioButton rbNoMatriculados;
    private javax.swing.JTable tCursos;
    // End of variables declaration//GEN-END:variables
}
